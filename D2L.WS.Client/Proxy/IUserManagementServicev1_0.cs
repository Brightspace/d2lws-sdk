using System;

namespace D2L.WS.Client.Proxy {
	public interface IUserManagementServicev1_0 : IHeaderService {
		IAsyncResult BeginChangePassword( ChangePasswordRequest ChangePasswordRequest, AsyncCallback callback, object asyncState );
		IAsyncResult BeginCreateUser( CreateUserRequest CreateUserRequest, AsyncCallback callback, object asyncState );
		IAsyncResult BeginDeleteUser( DeleteUserRequest DeleteUserRequest, AsyncCallback callback, object asyncState );
		IAsyncResult BeginDeleteUserByOrgDefinedId( DeleteUserByOrgDefinedIdRequest DeleteUserByOrgDefinedIdRequest, AsyncCallback callback, object asyncState );
		IAsyncResult BeginDeleteUserByUserName( DeleteUserByUserNameRequest DeleteUserByUserNameRequest, AsyncCallback callback, object asyncState );
		IAsyncResult BeginEnrollUser( EnrollUserRequest EnrollUserRequest, AsyncCallback callback, object asyncState );
		IAsyncResult BeginGetEnrollmentsByOrgUnit( GetEnrollmentsByOrgUnitRequest GetEnrollmentsByOrgUnitRequest, AsyncCallback callback, object asyncState );
		IAsyncResult BeginGetOrgUnitEnrollment( GetOrgUnitEnrollmentRequest GetOrgUnitEnrollmentRequest, AsyncCallback callback, object asyncState );
		IAsyncResult BeginGetRole( GetRoleRequest GetRoleRequest, AsyncCallback callback, object asyncState );
		IAsyncResult BeginGetRoles( GetRolesRequest GetRolesRequest, AsyncCallback callback, object asyncState );
		IAsyncResult BeginGetUser( GetUserRequest GetUserRequest, AsyncCallback callback, object asyncState );
		IAsyncResult BeginGetUserByOrgDefinedId( GetUserByOrgDefinedIdRequest GetUserByOrgDefinedIdRequest, AsyncCallback callback, object asyncState );
		IAsyncResult BeginGetUserByUserName( GetUserByUserNameRequest GetUserByUserNameRequest, AsyncCallback callback, object asyncState );
		IAsyncResult BeginUnenrollUser( UnenrollUserRequest UnenrollUserRequest, AsyncCallback callback, object asyncState );
		IAsyncResult BeginUpdateUser( UpdateUserRequest UpdateUserRequest, AsyncCallback callback, object asyncState );
		void CancelAsync( object userState );
		ChangePasswordResponse ChangePassword( ChangePasswordRequest ChangePasswordRequest );
		void ChangePasswordAsync( ChangePasswordRequest ChangePasswordRequest, object userState );
		void ChangePasswordAsync( ChangePasswordRequest ChangePasswordRequest );
		event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
		CreateUserResponse CreateUser( CreateUserRequest CreateUserRequest );
		void CreateUserAsync( CreateUserRequest CreateUserRequest );
		void CreateUserAsync( CreateUserRequest CreateUserRequest, object userState );
		event CreateUserCompletedEventHandler CreateUserCompleted;
		DeleteUserResponse DeleteUser( DeleteUserRequest DeleteUserRequest );
		void DeleteUserAsync( DeleteUserRequest DeleteUserRequest, object userState );
		void DeleteUserAsync( DeleteUserRequest DeleteUserRequest );
		DeleteUserResponse DeleteUserByOrgDefinedId( DeleteUserByOrgDefinedIdRequest DeleteUserByOrgDefinedIdRequest );
		void DeleteUserByOrgDefinedIdAsync( DeleteUserByOrgDefinedIdRequest DeleteUserByOrgDefinedIdRequest, object userState );
		void DeleteUserByOrgDefinedIdAsync( DeleteUserByOrgDefinedIdRequest DeleteUserByOrgDefinedIdRequest );
		event DeleteUserByOrgDefinedIdCompletedEventHandler DeleteUserByOrgDefinedIdCompleted;
		DeleteUserResponse DeleteUserByUserName( DeleteUserByUserNameRequest DeleteUserByUserNameRequest );
		void DeleteUserByUserNameAsync( DeleteUserByUserNameRequest DeleteUserByUserNameRequest );
		void DeleteUserByUserNameAsync( DeleteUserByUserNameRequest DeleteUserByUserNameRequest, object userState );
		event DeleteUserByUserNameCompletedEventHandler DeleteUserByUserNameCompleted;
		event DeleteUserCompletedEventHandler DeleteUserCompleted;
		ChangePasswordResponse EndChangePassword( IAsyncResult asyncResult );
		CreateUserResponse EndCreateUser( IAsyncResult asyncResult );
		DeleteUserResponse EndDeleteUser( IAsyncResult asyncResult );
		DeleteUserResponse EndDeleteUserByOrgDefinedId( IAsyncResult asyncResult );
		DeleteUserResponse EndDeleteUserByUserName( IAsyncResult asyncResult );
		EnrollUserResponse EndEnrollUser( IAsyncResult asyncResult );
		GetEnrollmentsByOrgUnitResponse EndGetEnrollmentsByOrgUnit( IAsyncResult asyncResult );
		GetOrgUnitEnrollmentResponse EndGetOrgUnitEnrollment( IAsyncResult asyncResult );
		GetRoleResponse EndGetRole( IAsyncResult asyncResult );
		GetRolesResponse EndGetRoles( IAsyncResult asyncResult );
		GetUserResponse EndGetUser( IAsyncResult asyncResult );
		GetUserResponse EndGetUserByOrgDefinedId( IAsyncResult asyncResult );
		GetUserResponse EndGetUserByUserName( IAsyncResult asyncResult );
		UnenrollUserResponse EndUnenrollUser( IAsyncResult asyncResult );
		UpdateUserResponse EndUpdateUser( IAsyncResult asyncResult );
		EnrollUserResponse EnrollUser( EnrollUserRequest EnrollUserRequest );
		void EnrollUserAsync( EnrollUserRequest EnrollUserRequest );
		void EnrollUserAsync( EnrollUserRequest EnrollUserRequest, object userState );
		event EnrollUserCompletedEventHandler EnrollUserCompleted;
		GetEnrollmentsByOrgUnitResponse GetEnrollmentsByOrgUnit( GetEnrollmentsByOrgUnitRequest GetEnrollmentsByOrgUnitRequest );
		void GetEnrollmentsByOrgUnitAsync( GetEnrollmentsByOrgUnitRequest GetEnrollmentsByOrgUnitRequest );
		void GetEnrollmentsByOrgUnitAsync( GetEnrollmentsByOrgUnitRequest GetEnrollmentsByOrgUnitRequest, object userState );
		event GetEnrollmentsByOrgUnitCompletedEventHandler GetEnrollmentsByOrgUnitCompleted;
		GetOrgUnitEnrollmentResponse GetOrgUnitEnrollment( GetOrgUnitEnrollmentRequest GetOrgUnitEnrollmentRequest );
		void GetOrgUnitEnrollmentAsync( GetOrgUnitEnrollmentRequest GetOrgUnitEnrollmentRequest );
		void GetOrgUnitEnrollmentAsync( GetOrgUnitEnrollmentRequest GetOrgUnitEnrollmentRequest, object userState );
		event GetOrgUnitEnrollmentCompletedEventHandler GetOrgUnitEnrollmentCompleted;
		GetRoleResponse GetRole( GetRoleRequest GetRoleRequest );
		void GetRoleAsync( GetRoleRequest GetRoleRequest );
		void GetRoleAsync( GetRoleRequest GetRoleRequest, object userState );
		event GetRoleCompletedEventHandler GetRoleCompleted;
		GetRolesResponse GetRoles( GetRolesRequest GetRolesRequest );
		void GetRolesAsync( GetRolesRequest GetRolesRequest, object userState );
		void GetRolesAsync( GetRolesRequest GetRolesRequest );
		event GetRolesCompletedEventHandler GetRolesCompleted;
		GetUserResponse GetUser( GetUserRequest GetUserRequest );
		void GetUserAsync( GetUserRequest GetUserRequest );
		void GetUserAsync( GetUserRequest GetUserRequest, object userState );
		GetUserResponse GetUserByOrgDefinedId( GetUserByOrgDefinedIdRequest GetUserByOrgDefinedIdRequest );
		void GetUserByOrgDefinedIdAsync( GetUserByOrgDefinedIdRequest GetUserByOrgDefinedIdRequest );
		void GetUserByOrgDefinedIdAsync( GetUserByOrgDefinedIdRequest GetUserByOrgDefinedIdRequest, object userState );
		event GetUserByOrgDefinedIdCompletedEventHandler GetUserByOrgDefinedIdCompleted;
		GetUserResponse GetUserByUserName( GetUserByUserNameRequest GetUserByUserNameRequest );
		void GetUserByUserNameAsync( GetUserByUserNameRequest GetUserByUserNameRequest, object userState );
		void GetUserByUserNameAsync( GetUserByUserNameRequest GetUserByUserNameRequest );
		event GetUserByUserNameCompletedEventHandler GetUserByUserNameCompleted;
		event GetUserCompletedEventHandler GetUserCompleted;
		UnenrollUserResponse UnenrollUser( UnenrollUserRequest UnenrollUserRequest );
		void UnenrollUserAsync( UnenrollUserRequest UnenrollUserRequest, object userState );
		void UnenrollUserAsync( UnenrollUserRequest UnenrollUserRequest );
		event UnenrollUserCompletedEventHandler UnenrollUserCompleted;
		UpdateUserResponse UpdateUser( UpdateUserRequest UpdateUserRequest );
		void UpdateUserAsync( UpdateUserRequest UpdateUserRequest, object userState );
		void UpdateUserAsync( UpdateUserRequest UpdateUserRequest );
		event UpdateUserCompletedEventHandler UpdateUserCompleted;
	}
}
